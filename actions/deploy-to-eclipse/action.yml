name: Upload artifacts to Eclipse server
description: Uploads artifacts to download.eclipse.org via SSH
inputs:
  ssh-private-key:
    required: true
    description: SSH private key for login to Eclipse server
  ssh-passphrase:
    required: true
    description: Passphrase for the SSH private key
  ssh-username:
    required: true
    description: Username for the SSH connection
  is-release:
    required: true
    description: true if this is a release, otherwise false

runs:
  using: "composite"
  steps:
    - name: Create repository folder and collect JARs
      shell: bash
      run: |
        mkdir -p repository
        find . -path "*build/libs/*.jar" -exec cp {} repository/ \;
        echo "Artifacts found:"
        ls -l repository/

    - name: Determine upload target
      id: context
      shell: bash
      run: |
        if [ "${{ inputs.is-release }}" = "true" ]; then
          echo "version_type=releases" >> $GITHUB_OUTPUT
        else
          echo "version_type=snapshots" >> $GITHUB_OUTPUT
        fi

    - name: Connect and upload artifacts
      env:
        SSH_PRIVATE_KEY: ${{ inputs.ssh-private-key }}
        SSH_PASSPHRASE: ${{ inputs.ssh-passphrase }}
        SSH_USERNAME: ${{ inputs.ssh-username }}
        VERSION_TYPE: ${{ steps.context.outputs.version_type }}
      shell: bash
      run: |
        set -e # Stop the script at the first error
        
        echo "--- Installing prerequisites ---"
        sudo apt-get update && sudo apt-get install -y expect openssh-client

        echo "--- Starting SSH agent and adding key ---"
        eval "$(ssh-agent -s)"

        echo "$SSH_PRIVATE_KEY" > id_rsa
        chmod 600 id_rsa
        
        expect << EOF
        spawn ssh-add id_rsa
        expect "Enter passphrase"
        send "$SSH_PASSPHRASE\r"
        expect eof
        EOF
        
        echo "Key added to agent:"
        ssh-add -l

        echo "--- Adding server to known hosts ---"
        mkdir -p ~/.ssh
        ssh-keyscan projects-storage.eclipse.org >> ~/.ssh/known_hosts

        echo "--- Uploading to: $VERSION_TYPE ---"
        # Remote directory creation
        ssh $SSH_USERNAME@projects-storage.eclipse.org "rm -rf /home/data/httpd/download.eclipse.org/keypop/$VERSION_TYPE && mkdir -p /home/data/httpd/download.eclipse.org/keypop/$VERSION_TYPE"
        
        # Sending files
        scp -r repository/* $SSH_USERNAME@projects-storage.eclipse.org:/home/data/httpd/download.eclipse.org/keypop/$VERSION_TYPE
        
        echo "--- Upload complete ---"